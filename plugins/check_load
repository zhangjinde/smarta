#!/usr/bin/env lua

-- check linux/darwin load
-- author: ery.lee@gmail.com from nodehub.cn

require("plugin")

function check(opts)
  local warn = opts["W"]
  local crit = opts["C"]
  local uname = os.uname()
  if uname == "Darwin" then
    output = os.cmd("uptime")
  elseif uname == "Linux" then
    output = os.cmd("cat /proc/loadavg")
  else
    print("UNKNOWN - unsupport os '%s'\n", uname)
    return
  end
  local sload1,sload5,sload15 = string.match(output, "([0-9]+.[0-9]+)%s([0-9]+.[0-9]+)%s([0-9]+.[0-9]+)")
  load1,load5,load15 = tonumber(sload1), tonumber(sload5), tonumber(sload15)
  local summary = string.format("1分钟平均负载: %s%%, 5分钟平均负载: %s%%, 15分钟平均负载: %s%%", load1, load5, load15)
  local status = "OK"
  if crit and eval("return "..crit) then
    status = "CRITICAL"
  elseif warn and eval("return "..warn) then
    status = "WARNING"
  end
  print(status.." - "..summary)
  print("metric:load1: "..load1.."%")
  print("metric:load5: "..load5.."%")
  print("metric:load15: "..load15.."%\n")
end

function usage()
  print("Usage: check_load [-h | -W warn | -C crit]")
end

-- parse arguments
local long_opts = {
   help = "h",
   crit = "C",
   warn = "W"
}

local opts,optind = getopts(arg, "hC:W:", long_opts)
if opts["h"] then
  usage()
  return
end

ok, err = pcall(check, opts)
if not ok then
  print("UNKNOWN - plugin internal error\n")
  print(err)
end

